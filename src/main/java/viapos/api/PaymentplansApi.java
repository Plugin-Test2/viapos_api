/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package viapos.api;

import java.util.List;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import viapos.model.PaymentPlan;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-01-06T23:36:52.493Z")

@Api(value = "paymentplans", description = "the paymentplans API")
@RequestMapping(value = "/v1")
public interface PaymentplansApi {

    @ApiOperation(value = "Create new Payment Plan", nickname = "createPaymentPlans", notes = "", tags={ "PaymentPlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "PaymentPlans created"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Pet not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/paymentplans",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> createPaymentPlans(@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept,@ApiParam(value = "PaymentPlan objects to be created" ,required=true )  @Valid @RequestBody List<PaymentPlan> paymentPlans);


    @ApiOperation(value = "Delete existing Payment Plans", nickname = "deletePaymentPlans", notes = "", tags={ "PaymentPlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "PaymentPlan not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/paymentplans",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deletePaymentPlans(@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept,@ApiParam(value = "PaymentPlan objects to be deleted" ,required=true )  @Valid @RequestBody List<PaymentPlan> paymentPlans);


    @ApiOperation(value = "Retrieve a single Subscription.", nickname = "getPaymentPlan", notes = "", response = PaymentPlan.class, tags={ "PaymentPlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = PaymentPlan.class),
        @ApiResponse(code = 404, message = "PaymentPlan not found"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/paymentplans/{paymentPlanId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<PaymentPlan> getPaymentPlan(@ApiParam(value = "ID of Payment Plan to return",required=true) @PathVariable("paymentPlanId") String paymentPlanId,@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept);


    @ApiOperation(value = "Retrieve all payment plans.", nickname = "getPaymentPlans", notes = "", response = PaymentPlan.class, responseContainer = "List", tags={ "PaymentPlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = PaymentPlan.class, responseContainer = "List"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/paymentplans",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<List<PaymentPlan>> getPaymentPlans(@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept);


    @ApiOperation(value = "Update existing Payment Plans", nickname = "updatePaymentPlans", notes = "", tags={ "PaymentPlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "PaymentPlan not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/paymentplans",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updatePaymentPlans(@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept,@ApiParam(value = "PaymentPlan objects to be updated" ,required=true )  @Valid @RequestBody List<PaymentPlan> paymentPlans);

}
