/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.15).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package viapos.api;

import java.util.List;
import viapos.model.RoutePlan;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-08-14T21:01:38.732Z")

@Api(value = "routePlans", description = "the routePlans API")
@RequestMapping(value = "/v1")
public interface RoutePlansApi {

    @ApiOperation(value = "Update an existing RoutePlans", nickname = "createRoutePlans", notes = "", tags={ "RoutePlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "RoutePlans created"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "RoutePlans not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/routePlans",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> createRoutePlans(@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept,@ApiParam(value = "RoutePlans objects to be created" ,required=true )  @Valid @RequestBody List<RoutePlan> routePlans);


    @ApiOperation(value = "Update an existing RoutePlans", nickname = "deleteRoutePlans", notes = "", tags={ "RoutePlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "RoutePlans not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/routePlans",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteRoutePlans(@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept,@ApiParam(value = "RoutePlans objects to be deleted" ,required=true )  @Valid @RequestBody List<RoutePlan> routePlans);


    @ApiOperation(value = "Retrieve a single RoutePlan.", nickname = "getRoutePlan", notes = "", response = RoutePlan.class, tags={ "RoutePlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = RoutePlan.class),
        @ApiResponse(code = 404, message = "Location not found"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/routePlans/{routePlanId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<RoutePlan> getRoutePlan(@ApiParam(value = "ID of RoutePlan to return",required=true) @PathVariable("routePlanId") String routePlanId,@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept);


    @ApiOperation(value = "Retrieve all RoutePlans.", nickname = "getRoutePlans", notes = "", response = RoutePlan.class, responseContainer = "List", tags={ "RoutePlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = RoutePlan.class, responseContainer = "List"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/routePlans",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<List<RoutePlan>> getRoutePlans(@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept);


    @ApiOperation(value = "Update an existing Employee", nickname = "updateRoutePlans", notes = "", tags={ "RoutePlan", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "RoutePlans not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/routePlans",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateRoutePlans(@ApiParam(value = "Content Type" ,required=true) @RequestHeader(value="Content-Type", required=true) String contentType,@ApiParam(value = "Format to send back" ,required=true) @RequestHeader(value="Accept", required=true) String accept,@ApiParam(value = "RoutePlans objects to be updated" ,required=true )  @Valid @RequestBody List<RoutePlan> routePlans);

}
